/*
 Generated by typeshare 1.13.2
*/

export enum DDocumentType {
	File = "file",
	Terminal = "terminal",
	Settings = "settings",
}

export interface DDocumentRef {
	id: string;
	title: string;
	type: DDocumentType;
}

export interface DTab {
	id: string;
	title: string;
	document_refs: DDocumentRef[];
	is_selected: boolean;
}

export enum DDocumentStatus {
	New = "new",
	SavedToFs = "saved-to-fs",
	Modified = "modified",
}

export interface DDocument {
	id: string;
	title: string;
	type: DDocumentType;
	file_path: string;
	buffer: string;
	status: DDocumentStatus;
}

export interface DWindowContent {
	documents: DDocument[];
}

export enum DFileTreeNodeType {
	File = "file",
	Folder = "folder",
}

export interface DFileTreeNode {
	name: string;
	path: string;
	type: DFileTreeNodeType;
	is_expanded?: boolean;
	children?: DFileTreeNode[];
}

export enum DSidebarType {
	Tree = "tree",
	Tabs = "tabs",
}

export interface DInterface {
	is_overlay_active: boolean;
	sidebar: DSidebarType;
}

export interface DWindowState {
	id: string;
	tabs: DTab[];
	content: DWindowContent;
	file_path: string;
	file_tree: DFileTreeNode;
	ui: DInterface;
}

export interface DAppState {
	windows: Record<string, DWindowState>;
}

